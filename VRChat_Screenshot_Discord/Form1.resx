<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sP8PB2pS6DfLZJAAAAAASUVORK5CYII=
</value>
  </data>
</root>
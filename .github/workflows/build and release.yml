name: Build Project

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: チェックアウトリポジトリ
        uses: actions/checkout@v3

      - name: .NET SDKのセットアップ
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: ビルドを実行
        run: |
          dotnet restore VRChat_Screenshot_Discord/VRChat_Screenshot_Discord.vbproj
          dotnet build VRChat_Screenshot_Discord/VRChat_Screenshot_Discord.vbproj --configuration Release

      - name: パッケージを作成
        shell: pwsh
        run: |
          $DATE = (Get-Date -Format "yyyyMMdd_HHmmss")
          $COUNTER = 1
          do {
            $VERSION = "{0}_{1:D3}" -f $DATE, $COUNTER
            $ZIP_NAME = "VSD-VRChatScreenshotDiscord_$VERSION.zip"
            $COUNTER++
          } while (Test-Path "./output/$ZIP_NAME")
          dotnet publish VRChat_Screenshot_Discord/VRChat_Screenshot_Discord.vbproj --configuration Release --output ./output
          Compress-Archive -Path ./output/* -DestinationPath "./output/$ZIP_NAME"
          echo "VERSION=$VERSION" >> $env:GITHUB_ENV
          echo "ZIP_NAME=$ZIP_NAME" >> $env:GITHUB_ENV

      - name: ZIPファイルをアーティファクトとして保存
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ZIP_NAME }}
          path: ./output/${{ env.ZIP_NAME }}

      - name: タグの作成
        shell: bash
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -a "${{ env.VERSION }}" -m "Version ${{ env.VERSION }}"
          git push origin "${{ env.VERSION }}"

      - name: GitHubリリースを作成
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: リリース ${{ env.VERSION }}
          body: |
            **リリースノート**
            - バージョン: **${{ env.VERSION }}**
            - 変更点:
              - 安定性が向上しました。
              - 既知の問題を修正しました。
          draft: false
          prerelease: false

      - name: ZIPファイルをリリースにアップロード
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./output/${{ env.ZIP_NAME }}
          tag: "${{ env.VERSION }}"
          token: ${{ secrets.GITHUB_TOKEN }}

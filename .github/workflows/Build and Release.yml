name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore VRChat_Screenshot_Discord/VRChat_Screenshot_Discord.vbproj

    - name: Build the project
      run: dotnet build VRChat_Screenshot_Discord/VRChat_Screenshot_Discord.vbproj --configuration Release

    - name: Publish the project
      run: dotnet publish VRChat_Screenshot_Discord/VRChat_Screenshot_Discord.vbproj --configuration Release --output ./output

    - name: Generate version and create ZIP file
      id: create_zip
      run: |
        $VERSION_DATE = (Get-Date -Format "yyyyMMdd")
        $COUNTER = 1
        $VERSION = "$VERSION_DATE_{0:D3}" -f $COUNTER
        $ZIP_NAME = "VSD-VRChatScreenshotDiscord_V$VERSION.zip"
        while (Test-Path "./output/$ZIP_NAME") {
          $COUNTER++
          $VERSION = "$VERSION_DATE_{0:D3}" -f $COUNTER
          $ZIP_NAME = "VSD-VRChatScreenshotDiscord_V$VERSION.zip"
        }
        Compress-Archive -Path ./output/* -DestinationPath "./output/$ZIP_NAME"
        echo "ZIP_PATH=./output/$ZIP_NAME" >> $GITHUB_ENV
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
        echo "VERSION=V$VERSION" >> $GITHUB_ENV
      shell: pwsh

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }} # 正しく VERSION を指定
        release_name: Release ${{ env.VERSION }}
        body: |
          **Release Notes**
          - Version: ${{ env.VERSION }}
          - Changes:
            - Improved stability.
            - Fixed known issues.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ZIP_PATH }}
        asset_name: ${{ env.ZIP_NAME }}
        asset_content_type: application/zip
